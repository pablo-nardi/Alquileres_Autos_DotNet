// <auto-generated />
using System;
using AlquileresAutos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlquileresAutos.Migrations
{
    [DbContext(typeof(AlquileresAutosContext))]
    [Migration("20230526155509_cambioRestriccionFKLocProv")]
    partial class cambioRestriccionFKLocProv
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlquileresAutos.Models.Auto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("CapacidadTanque")
                        .HasColumnType("real");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<float>("Kilometraje")
                        .HasColumnType("real");

                    b.Property<int>("ModeloID")
                        .HasColumnType("int");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ModeloID");

                    b.HasIndex("Patente")
                        .IsUnique();

                    b.ToTable("Auto", (string)null);
                });

            modelBuilder.Entity("AlquileresAutos.Models.Localidad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denominacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvinciaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProvinciaID");

                    b.ToTable("Localidad");
                });

            modelBuilder.Entity("AlquileresAutos.Models.Modelo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AireAcondicionado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantEquipajeChico")
                        .HasColumnType("int");

                    b.Property<int>("CantEquipajeGrande")
                        .HasColumnType("int");

                    b.Property<int>("CantPasajeros")
                        .HasColumnType("int");

                    b.Property<string>("Denominacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioPorDia")
                        .HasColumnType("real");

                    b.Property<int?>("TipoAutoID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Transmision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TipoAutoID");

                    b.ToTable("Modelo", (string)null);
                });

            modelBuilder.Entity("AlquileresAutos.Models.Provincia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denominacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("AlquileresAutos.Models.TipoAuto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipoAuto", (string)null);
                });

            modelBuilder.Entity("AlquileresAutos.Models.Auto", b =>
                {
                    b.HasOne("AlquileresAutos.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("AlquileresAutos.Models.Localidad", b =>
                {
                    b.HasOne("AlquileresAutos.Models.Provincia", "Provincia")
                        .WithMany("Localidades")
                        .HasForeignKey("ProvinciaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("AlquileresAutos.Models.Modelo", b =>
                {
                    b.HasOne("AlquileresAutos.Models.TipoAuto", "tipoAuto")
                        .WithMany()
                        .HasForeignKey("TipoAutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipoAuto");
                });

            modelBuilder.Entity("AlquileresAutos.Models.Provincia", b =>
                {
                    b.Navigation("Localidades");
                });
#pragma warning restore 612, 618
        }
    }
}
